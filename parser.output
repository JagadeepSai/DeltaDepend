Terminals unused in grammar

   INTEGER
   ASSIGN_OP
   GTE
   LTE
   LT
   GT
   EQ
   NEQ
   FOR


Grammar

    0 $accept: PROG $end

    1 PROG: ARRAY

    2 ARR_INDEX_EQ: INTEGER_NUMBER '*' NAME
    3             | ARR_INDEX_EQ '+' ARR_INDEX_EQ
    4             | ARR_INDEX_EQ '-' ARR_INDEX_EQ
    5             | NAME
    6             | INTEGER_NUMBER

    7 ARRAY: NAME '[' ARR_INDEX_EQ ARRAY1

    8 ARRAY1: ']' '[' ARR_INDEX_EQ ARRAY1
    9       | ']'


Terminals, with rules where they appear

$end (0) 0
'*' (42) 2
'+' (43) 3
'-' (45) 4
'[' (91) 7 8
']' (93) 8 9
error (256)
INTEGER (258)
ASSIGN_OP (259)
GTE (260)
LTE (261)
LT (262)
GT (263)
EQ (264)
NEQ (265)
FOR (266)
NAME (267) 2 5 7
INTEGER_NUMBER (268) 2 6


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
PROG (20)
    on left: 1, on right: 0
ARR_INDEX_EQ (21)
    on left: 2 3 4 5 6, on right: 3 4 7 8
ARRAY (22)
    on left: 7, on right: 1
ARRAY1 (23)
    on left: 8 9, on right: 7 8


State 0

    0 $accept: . PROG $end

    NAME  shift, and go to state 1

    PROG   go to state 2
    ARRAY  go to state 3


State 1

    7 ARRAY: NAME . '[' ARR_INDEX_EQ ARRAY1

    '['  shift, and go to state 4


State 2

    0 $accept: PROG . $end

    $end  shift, and go to state 5


State 3

    1 PROG: ARRAY .

    $default  reduce using rule 1 (PROG)


State 4

    7 ARRAY: NAME '[' . ARR_INDEX_EQ ARRAY1

    NAME            shift, and go to state 6
    INTEGER_NUMBER  shift, and go to state 7

    ARR_INDEX_EQ  go to state 8


State 5

    0 $accept: PROG $end .

    $default  accept


State 6

    5 ARR_INDEX_EQ: NAME .

    $default  reduce using rule 5 (ARR_INDEX_EQ)


State 7

    2 ARR_INDEX_EQ: INTEGER_NUMBER . '*' NAME
    6             | INTEGER_NUMBER .

    '*'  shift, and go to state 9

    $default  reduce using rule 6 (ARR_INDEX_EQ)


State 8

    3 ARR_INDEX_EQ: ARR_INDEX_EQ . '+' ARR_INDEX_EQ
    4             | ARR_INDEX_EQ . '-' ARR_INDEX_EQ
    7 ARRAY: NAME '[' ARR_INDEX_EQ . ARRAY1

    '+'  shift, and go to state 10
    '-'  shift, and go to state 11
    ']'  shift, and go to state 12

    ARRAY1  go to state 13


State 9

    2 ARR_INDEX_EQ: INTEGER_NUMBER '*' . NAME

    NAME  shift, and go to state 14


State 10

    3 ARR_INDEX_EQ: ARR_INDEX_EQ '+' . ARR_INDEX_EQ

    NAME            shift, and go to state 6
    INTEGER_NUMBER  shift, and go to state 7

    ARR_INDEX_EQ  go to state 15


State 11

    4 ARR_INDEX_EQ: ARR_INDEX_EQ '-' . ARR_INDEX_EQ

    NAME            shift, and go to state 6
    INTEGER_NUMBER  shift, and go to state 7

    ARR_INDEX_EQ  go to state 16


State 12

    8 ARRAY1: ']' . '[' ARR_INDEX_EQ ARRAY1
    9       | ']' .

    '['  shift, and go to state 17

    $default  reduce using rule 9 (ARRAY1)


State 13

    7 ARRAY: NAME '[' ARR_INDEX_EQ ARRAY1 .

    $default  reduce using rule 7 (ARRAY)


State 14

    2 ARR_INDEX_EQ: INTEGER_NUMBER '*' NAME .

    $default  reduce using rule 2 (ARR_INDEX_EQ)


State 15

    3 ARR_INDEX_EQ: ARR_INDEX_EQ . '+' ARR_INDEX_EQ
    3             | ARR_INDEX_EQ '+' ARR_INDEX_EQ .
    4             | ARR_INDEX_EQ . '-' ARR_INDEX_EQ

    $default  reduce using rule 3 (ARR_INDEX_EQ)


State 16

    3 ARR_INDEX_EQ: ARR_INDEX_EQ . '+' ARR_INDEX_EQ
    4             | ARR_INDEX_EQ . '-' ARR_INDEX_EQ
    4             | ARR_INDEX_EQ '-' ARR_INDEX_EQ .

    $default  reduce using rule 4 (ARR_INDEX_EQ)


State 17

    8 ARRAY1: ']' '[' . ARR_INDEX_EQ ARRAY1

    NAME            shift, and go to state 6
    INTEGER_NUMBER  shift, and go to state 7

    ARR_INDEX_EQ  go to state 18


State 18

    3 ARR_INDEX_EQ: ARR_INDEX_EQ . '+' ARR_INDEX_EQ
    4             | ARR_INDEX_EQ . '-' ARR_INDEX_EQ
    8 ARRAY1: ']' '[' ARR_INDEX_EQ . ARRAY1

    '+'  shift, and go to state 10
    '-'  shift, and go to state 11
    ']'  shift, and go to state 12

    ARRAY1  go to state 19


State 19

    8 ARRAY1: ']' '[' ARR_INDEX_EQ ARRAY1 .

    $default  reduce using rule 8 (ARRAY1)
